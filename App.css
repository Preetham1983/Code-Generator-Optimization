body {
  font-family: Arial, sans-serif;
  background-color: #f0f2f5;
  color: #333;
  margin: 0;
  padding: 0;
  position: relative; /* Required for the footer positioning */
  min-height: 100vh; /* Ensure the body covers the full viewport height */
}

.App {
  text-align: center;
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.App-header {
  background-color: #282c34;
  padding: 20px;
  color: white;
  border-radius: 8px;
}

h1 {
  font-size: 2em;
  margin: 0;
}

/* Form Container */
.form-container {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  gap: 20px;
}

form {
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 8px black;
  padding: 20px;
  margin: 10px;
  flex: 1;
  max-width: 400px;
  box-sizing: border-box;
}

input[type="text"], select, input[type="file"] {
  width: 95%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 4px;
}

/* Button Styles */
button {
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 10px 20px;
  font-size: 1em;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

.styled-button {
  background-color: #28a745;
}
.styled-button2{
  background-color: #28a745;
}

.styled-button:hover {
  background-color: #218838;
}

.copy-button {
  background-color: #17a2b8;
}

.copy-button:hover {
  background-color: #117a8b;
}

/* Response Section */
.response {
  margin: 20px 0;
  padding: 20px;
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  max-width: 800px;
  margin: 20px auto;
}

pre {
  text-align: left;
  background-color: #f8f9fa;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow-x: auto;
}

@media (max-width: 768px) {
  .form-container {
    flex-direction: column;
    align-items: center;
  }

  form {
    max-width: 100%;
  }

  button {
    padding: 8px 16px;
  }
}

nav {
  margin: 10px 0;
}

nav a {
  color: #00bcd4; /* Teal */
  text-decoration: none;
  font-size: 18px;
  margin: 0 10px;
}

nav a:hover {
  text-decoration: underline;
  color: #ff5722; 
}

/* Add this to your App.css */
.loading-bar {
  width: 100%;
  background-color: #f3f3f3;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  text-align: center;
  padding: 10px;
}

.progress {
  width: 50%;
  height: 5px;
  background-color: #ddd;
  margin: 0 auto;
}

.indeterminate {
  width: 100%;
  height: 5px;
  background-color: #4caf50;
  animation: loading 2s infinite linear;
}

@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh; /* Takes full viewport height */
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  background-color: rgba(0, 0, 0, 0.3); /* Lighter semi-transparent background */
  z-index: 1000;
}

.loading-spinner {
  border: 8px solid #f3f3f3; /* Lighter grey, thinner border */
  border-top: 8px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 60px; /* Smaller width */
  height: 60px; /* Smaller height */
  animation: spin 1.5s linear infinite; /* Slightly faster spinner */
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}



/* Add this to your App.css file or inside a <style> tag in your component */
@keyframes scroll-left {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}


.rfm-marquee-container {
  background: rgb(195, 224, 229);
  padding: 10px;
  font-size: 16px;
  color: blue;
  font-weight: bold;
  border-radius: 5px;
  overflow: hidden;
  white-space: nowrap;
  box-sizing: border-box;
  flex: 0 0 auto;
  z-index: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  min-width: var(--min-width);
}

.rfm-marquee {
  display: inline-block;
  animation: scroll-left var(--duration) linear infinite;
  animation-play-state: var(--play); /* Dynamically controls animation running or paused */
  animation-direction: var(--direction); /* Controls scroll direction */
  animation-delay: var(--delay); /* Optional delay for animation start */
  animation-iteration-count: var(--iteration-count); /* Set number of times the animation repeats */
  --duration:  75s; /* Adjust animation speed */
  --play: running;
  --direction: normal;
  --delay: 0s;
  --iteration-count: infinite;
  --min-width: 100%;
  color: #007bff;
}

/* Pause animation on hover */
.rfm-marquee:hover {
  --play: paused; /* Pauses the scrolling when hovered */
}

/* Pause animation on click */
.rfm-marquee:active {
  --play: paused;
}

/* Change animation direction when clicked */
.rfm-marquee-container:active {
  --direction: reverse; /* Reverse direction on click */
}
